{"version":3,"sources":["assets\\script\\game\\Shake.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAE5C,WAAW;AACX,yDAAyD;AACzD;IAAoB,yBAAiB;IAWjC,eAAY,QAAQ,EAAE,cAAc,EAAE,cAAc;QAApD,YACI,iBAAO,SAIV;QAHG,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;;IACpE,CAAC;IAED,YAAY;IACZ,iCAAiB,GAAjB,UAAkB,GAAG,EAAE,GAAG;QACtB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACjD,CAAC;IAED,sBAAM,GAAN,UAAO,EAAE;QACL,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;QAC3F,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,gCAAgB,GAAhB,UAAiB,QAAQ,EAAE,cAAc,EAAE,cAAc;QACrD,IAAI,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;YACnE,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC;YACzC,IAAI,CAAC,kBAAkB,GAAG,cAAc,IAAI,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC;YAC1F,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,+BAAe,GAAf,UAAgB,MAAM;QAClB,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC;IACD,oBAAI,GAAJ;QACI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IACL,YAAC;AAAD,CA5CA,AA4CC,CA5CmB,EAAE,CAAC,cAAc,GA4CpC;AAED,EAAE,CAAC,KAAK,GAAG,UAAC,QAAQ,EAAE,cAAc,EAAE,cAAc;IAChD,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;AAC/D,CAAC,CAAA","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n// @ccclass\r\n// export default class Shake extends cc.ActionInterval {\r\nclass Shake extends cc.ActionInterval {\r\n    //节点初始位置\r\n    nodeInitialPos: cc.Vec2\r\n    //X轴抖动幅度\r\n    nodeShakeStrengthX: 0\r\n    //Y轴抖动幅度\r\n    nodeShakeStrengthY: 0\r\n    //抖动时间\r\n    duration: 0\r\n    target: any;\r\n\r\n    constructor(duration, shakeStrengthX, shakeStrengthY) {\r\n        super();\r\n        cc.ActionInterval.prototype.constructor.call(this);\r\n        this.duration = duration;\r\n        this.initWithDuration(duration, shakeStrengthX, shakeStrengthY);\r\n    }\r\n\r\n    //获取两个数间的随机值\r\n    getRandomStrength(min, max) {\r\n        return Math.random() * (max - min + 1) + min;\r\n    }\r\n\r\n    update(dt) {\r\n        var randX = this.getRandomStrength(-this.nodeShakeStrengthX, this.nodeShakeStrengthX) * dt;\r\n        var randY = this.getRandomStrength(-this.nodeShakeStrengthY, this.nodeShakeStrengthY) * dt;\r\n        this.target.setPosition(this.nodeInitialPos.add(cc.v2(randX, randY)));\r\n    }\r\n\r\n    initWithDuration(duration, shakeStrengthX, shakeStrengthY) {\r\n        if (cc.ActionInterval.prototype.initWithDuration.call(this, duration)) {\r\n            this.nodeShakeStrengthX = shakeStrengthX;\r\n            this.nodeShakeStrengthY = shakeStrengthY == 'undefined' ? shakeStrengthX : shakeStrengthY;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    startWithTarget(target) {\r\n        cc.ActionInterval.prototype.startWithTarget.call(this, target);\r\n        this.nodeInitialPos = target.getPosition();\r\n    }\r\n    stop() {\r\n        this.target.setPosition(this.nodeInitialPos);\r\n    }\r\n}\r\n\r\ncc.shake = (duration, shakeStrengthX, shakeStrengthY) => {\r\n    return new Shake(duration, shakeStrengthX, shakeStrengthY);\r\n}"]}