{"version":3,"sources":["assets\\FSDK_ASS\\FSript\\Fzlib\\ByteArray.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * auth mark\r\n * \r\n */\r\n\r\n\r\nenum Endian {\r\n    LITTLE_ENDIAN = \"littleEndian\",\r\n    BIG_ENDIAN = \"bigEndian\"\r\n}\r\nexport default class ByteArray {\r\n    readonly bufferOffset: number;\r\n\r\n    public _position;\r\n\r\n    endian: string;\r\n    private BUFFER_EXT_SIZE;\r\n\r\n    protected data: DataView;    \r\n\r\n    private EOF_byte;\r\n    private EOF_code_point;\r\n\r\n    public constructor(buffer?: ArrayBuffer) {\r\n        this.BUFFER_EXT_SIZE = 0; //Buffer expansion size\r\n        this.EOF_byte = -1;\r\n        this.EOF_code_point = -1;\r\n        this._setArrayBuffer(buffer || new ArrayBuffer(this.BUFFER_EXT_SIZE));\r\n        this.endian = Endian.BIG_ENDIAN;\r\n\r\n    }\r\n        \r\n    public get _buffer(){\r\n        return this.data.buffer;\r\n    }\r\n\r\n    public set _buffer(value){\r\n        this.data = new DataView(value);\r\n    }\r\n\r\n    public _setArrayBuffer(buffer) {\r\n        this.data = new DataView(buffer);\r\n        this._position = 0;\r\n    }\r\n    public readUnsignedShort(): number {\r\n        if (!this.validate(2 /* SIZE_OF_UINT16 */))\r\n            return null;\r\n        var value = this.data.getUint16(this._position, this.endian == Endian.LITTLE_ENDIAN);\r\n        this._position += 2 /* SIZE_OF_UINT16 */;\r\n        return value;\r\n    }\r\n\r\n\r\n    public readUTF(): string {\r\n        if (!this.validate(2)) {\r\n            return null;\r\n        }\r\n        var length = this.data.getUint16(this._position, this.endian == Endian.LITTLE_ENDIAN);\r\n        this._position += 2;\r\n        if (length > 0) {\r\n            return this.readUTFBytes(length);\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    // public readBytes(bytes:ByteArray,offset?:number,length?:number){\r\n    //     if (offset === void 0) { offset = 0; }\r\n    //         if (length === void 0) { length = 0; }\r\n    //         if (length == 0) {\r\n    //             length = (bytes._buffer.byteLength-this._position);\r\n    //         }\r\n    //         else if (!this.validate(length)) {\r\n    //             return null;\r\n    //         }\r\n    //         if (bytes) {\r\n    //             bytes.validateBuffer(offset + length);\r\n    //         }\r\n    //         else {\r\n    //             bytes = new ByteArray(new ArrayBuffer(offset + length));\r\n    //         }\r\n    //         //This method is expensive\r\n    //         for (var i = 0; i < length; i++) {\r\n    //             bytes.data.setUint8(i + offset, this.data.getUint8(this._position++));\r\n    //         }\r\n    // }\r\n\r\n    public readBytes(length: number): ArrayBuffer {\r\n        if (!this.validate(length)) {\r\n            return null;\r\n        }\r\n\r\n        let bytes = new Uint8Array(this._buffer, this._position, length);\r\n        this._position += length;\r\n        return bytes\r\n    }\r\n    public readUTFBytes(length: number): string {\r\n        \r\n        if (!this.validate(length)) {\r\n            return null;\r\n        }\r\n        var bytes = new Uint8Array(this._buffer, this._position, length);\r\n        this._position += length;\r\n        return this.decodeUTF8(bytes);\r\n    }    \r\n    public writeUnsignedShort(value: number): void {\r\n        this.validateBuffer(2 /* SIZE_OF_UINT16 */);        \r\n        this.data.setUint16(this._position, value, this.endian == Endian.LITTLE_ENDIAN);\r\n        this._position += 2 /* SIZE_OF_UINT16 */;\r\n    }\r\n\r\n    public writeUTFBytes(value: string): void {\r\n        this._writeUint8Array(this.encodeUTF8(value));\r\n    }\r\n\r\n    public writeBytes(buffer): void {\r\n        let u8array =  new Uint8Array(buffer)\r\n        this._writeUint8Array(u8array)\r\n    }\r\n\r\n\r\n    _writeUint8Array(bytes: Uint8Array, validateBuffer?: boolean): void {\r\n        if (validateBuffer === void 0) { validateBuffer = true; }        \r\n        if (validateBuffer) {\r\n            this.validateBuffer(bytes.length);\r\n        }\r\n        for (var i = 0; i < bytes.length; i++) {\r\n            this.data.setUint8(this._position++, bytes[i]);\r\n        }\r\n    }\r\n\r\n\r\n    public validate(len: number): boolean {\r\n        if (this.data.byteLength > 0 && this._position + len <= this.data.byteLength) {\r\n            return true;\r\n        }\r\n        else {\r\n        }\r\n    }\r\n\r\n    private validateBuffer(len, needReplace?) {\r\n        if (needReplace === void 0) { needReplace = false; }\r\n        len += this._position;\r\n        if (this._buffer.byteLength < len || needReplace) {\r\n            var tmp = new Uint8Array(new ArrayBuffer(len + this.BUFFER_EXT_SIZE));\r\n            var length_12 = Math.min(this.data.buffer.byteLength, len + this.BUFFER_EXT_SIZE);\r\n            tmp.set(new Uint8Array(this.data.buffer, 0, length_12));\r\n            this._buffer = tmp.buffer;\r\n        }\r\n    }\r\n\r\n    private encodeUTF8(str) {\r\n        var pos = 0;\r\n        var codePoints = this.stringToCodePoints(str);\r\n        var outputBytes = [];\r\n        while (codePoints.length > pos) {\r\n            var code_point = codePoints[pos++];\r\n            if (this.inRange(code_point, 0xD800, 0xDFFF)) {\r\n                this.encoderError(code_point);\r\n            }\r\n            else if (this.inRange(code_point, 0x0000, 0x007f)) {\r\n                outputBytes.push(code_point);\r\n            }\r\n            else {\r\n                var count = void 0, offset = void 0;\r\n                if (this.inRange(code_point, 0x0080, 0x07FF)) {\r\n                    count = 1;\r\n                    offset = 0xC0;\r\n                }\r\n                else if (this.inRange(code_point, 0x0800, 0xFFFF)) {\r\n                    count = 2;\r\n                    offset = 0xE0;\r\n                }\r\n                else if (this.inRange(code_point, 0x10000, 0x10FFFF)) {\r\n                    count = 3;\r\n                    offset = 0xF0;\r\n                }\r\n                outputBytes.push(this.div(code_point, Math.pow(64, count)) + offset);\r\n                while (count > 0) {\r\n                    var temp = this.div(code_point, Math.pow(64, count - 1));\r\n                    outputBytes.push(0x80 + (temp % 64));\r\n                    count -= 1;\r\n                }\r\n            }\r\n        }\r\n        return new Uint8Array(outputBytes);\r\n    }\r\n\r\n\r\n    private decodeUTF8(data) {\r\n        var fatal = false;\r\n        var pos = 0;\r\n        var result = \"\";\r\n        var code_point;\r\n        var utf8_code_point = 0;\r\n        var utf8_bytes_needed = 0;\r\n        var utf8_bytes_seen = 0;\r\n        var utf8_lower_boundary = 0;\r\n        while (data.length > pos) {\r\n            var _byte = data[pos++];\r\n            if (_byte == this.EOF_byte) {\r\n                if (utf8_bytes_needed != 0) {\r\n                    code_point = this.decoderError(fatal);\r\n                }\r\n                else {\r\n                    code_point = this.EOF_code_point;\r\n                }\r\n            }\r\n            else {\r\n                if (utf8_bytes_needed == 0) {\r\n                    if (this.inRange(_byte, 0x00, 0x7F)) {\r\n                        code_point = _byte;\r\n                    }\r\n                    else {\r\n                        if (this.inRange(_byte, 0xC2, 0xDF)) {\r\n                            utf8_bytes_needed = 1;\r\n                            utf8_lower_boundary = 0x80;\r\n                            utf8_code_point = _byte - 0xC0;\r\n                        }\r\n                        else if (this.inRange(_byte, 0xE0, 0xEF)) {\r\n                            utf8_bytes_needed = 2;\r\n                            utf8_lower_boundary = 0x800;\r\n                            utf8_code_point = _byte - 0xE0;\r\n                        }\r\n                        else if (this.inRange(_byte, 0xF0, 0xF4)) {\r\n                            utf8_bytes_needed = 3;\r\n                            utf8_lower_boundary = 0x10000;\r\n                            utf8_code_point = _byte - 0xF0;\r\n                        }\r\n                        else {\r\n                            this.decoderError(fatal);\r\n                        }\r\n                        utf8_code_point = utf8_code_point * Math.pow(64, utf8_bytes_needed);\r\n                        code_point = null;\r\n                    }\r\n                }\r\n                else if (!this.inRange(_byte, 0x80, 0xBF)) {\r\n                    utf8_code_point = 0;\r\n                    utf8_bytes_needed = 0;\r\n                    utf8_bytes_seen = 0;\r\n                    utf8_lower_boundary = 0;\r\n                    pos--;\r\n                    code_point = this.decoderError(fatal, _byte);\r\n                }\r\n                else {\r\n                    utf8_bytes_seen += 1;\r\n                    utf8_code_point = utf8_code_point + (_byte - 0x80) * Math.pow(64, utf8_bytes_needed - utf8_bytes_seen);\r\n                    if (utf8_bytes_seen !== utf8_bytes_needed) {\r\n                        code_point = null;\r\n                    }\r\n                    else {\r\n                        var cp = utf8_code_point;\r\n                        var lower_boundary = utf8_lower_boundary;\r\n                        utf8_code_point = 0;\r\n                        utf8_bytes_needed = 0;\r\n                        utf8_bytes_seen = 0;\r\n                        utf8_lower_boundary = 0;\r\n                        if (this.inRange(cp, lower_boundary, 0x10FFFF) && !this.inRange(cp, 0xD800, 0xDFFF)) {\r\n                            code_point = cp;\r\n                        }\r\n                        else {\r\n                            code_point = this.decoderError(fatal, _byte);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //Decode string\r\n            if (code_point !== null && code_point !== this.EOF_code_point) {\r\n                if (code_point <= 0xFFFF) {\r\n                    if (code_point > 0)\r\n                        result += String.fromCharCode(code_point);\r\n                }\r\n                else {\r\n                    code_point -= 0x10000;\r\n                    result += String.fromCharCode(0xD800 + ((code_point >> 10) & 0x3ff));\r\n                    result += String.fromCharCode(0xDC00 + (code_point & 0x3ff));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private encoderError(code_point) {\r\n    }\r\n\r\n    private decoderError(fatal, opt_code_point?) {\r\n        if (fatal) {\r\n        }\r\n        return opt_code_point || 0xFFFD;\r\n    }\r\n\r\n\r\n\r\n    private inRange(a, min, max) {\r\n        return min <= a && a <= max;\r\n    }\r\n\r\n    private div(n, d) {\r\n        return Math.floor(n / d);\r\n    }\r\n\r\n    private stringToCodePoints(string) {\r\n        var cps = [];\r\n        var i = 0, n = string.length;\r\n        while (i < string.length) {\r\n            var c = string.charCodeAt(i);\r\n            if (!this.inRange(c, 0xD800, 0xDFFF)) {\r\n                cps.push(c);\r\n            }\r\n            else if (this.inRange(c, 0xDC00, 0xDFFF)) {\r\n                cps.push(0xFFFD);\r\n            }\r\n            else {\r\n                if (i == n - 1) {\r\n                    cps.push(0xFFFD);\r\n                }\r\n                else {\r\n                    var d = string.charCodeAt(i + 1);\r\n                    if (this.inRange(d, 0xDC00, 0xDFFF)) {\r\n                        var a = c & 0x3FF;\r\n                        var b = d & 0x3FF;\r\n                        i += 1;\r\n                        cps.push(0x10000 + (a << 10) + b);\r\n                    }\r\n                    else {\r\n                        cps.push(0xFFFD);\r\n                    }\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n        return cps;\r\n    }\r\n}\r\n"]}