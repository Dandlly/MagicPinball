{"version":3,"sources":["assets\\script\\game\\TakeAim.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2DAAwD;AAElD,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAC5C;;GAEG;AAEH;IAAqC,2BAAY;IADjD;QAAA,qEAiDC;QA9CG,WAAK,GAAc,IAAI,CAAC;;IA8C5B,CAAC;IA5CG,wBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,aAAa;IACb,6BAAW,GAAX,UAAY,KAAK;QACb,IAAI,CAAC,6BAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;YACxC,OAAO;SACV;QACD,IAAI,6BAAY,CAAC,OAAO;YAAE,OAAO;QAEjC,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,QAAQ;QACrC,mEAAmE;QACnE,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAEnE,IAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAE;YAClB,QAAQ,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SAC3C;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAI,WAAW;QAC3C,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAmB;QACjE,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM;QAEhC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChD,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACvB,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEjB,kBAAkB;QAClB,OAAO,UAAU,GAAG,MAAM,EAAE;YACxB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACvB,UAAU,IAAI,MAAM,CAAC;SACxB;QAED,iCAAiC;QACjC,wDAAwD;QACxD,iCAAiC;IACrC,CAAC;IA5CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;0CACI;IAFP,OAAO;QAD3B,OAAO;OACa,OAAO,CAgD3B;IAAD,cAAC;CAhDD,AAgDC,CAhDoC,EAAE,CAAC,SAAS,GAgDhD;kBAhDoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import { GameConstant } from \"../common/EventConstants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n/**\r\n * 作者:Dandlly\r\n */\r\n@ccclass\r\nexport default class TakeAim extends cc.Component {\r\n    @property(cc.Sprite)\r\n    arraw: cc.Sprite = null;\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n    }\r\n\r\n    //触摸移动操作，射线瞄准\r\n    onTouchMove(touch) {\r\n        if (!GameConstant.game.isRecycleFinished()) {\r\n            return;\r\n        }\r\n        if (GameConstant.isAward) return;\r\n\r\n        let origin = cc.v2(0, 400);  //射线原点坐标\r\n        // let touchPos = this.node.convertTouchToNodeSpaceAR(touch.touch);\r\n        let touchPos = this.node.convertToNodeSpaceAR(touch.getLocation());\r\n\r\n        if (touchPos.y > 320) {\r\n            touchPos = new cc.Vec2(touchPos.x, 320);\r\n        }\r\n\r\n        let graphics = this.node.getComponent(cc.Graphics);\r\n        let line = touchPos.sub(origin);\r\n        let length = 40;\r\n        let lineLength = line.mag();    //获得这个向量的长度\r\n        let increment = line.normalize().mul(length); //根据每条线段的长度获得一个增量向量\r\n        let pos = origin.clone(); //临时变量\r\n\r\n        graphics.fillColor = cc.color(78, 72, 125, 255);\r\n        pos.addSelf(increment);\r\n        pos.addSelf(increment);\r\n        graphics.clear();\r\n\r\n        //只要线段长度还大于每条线段的长度\r\n        while (lineLength > length) {\r\n            graphics.circle(pos.x, pos.y, 5);\r\n            graphics.fill();\r\n            pos.addSelf(increment);\r\n            lineLength -= length;\r\n        }\r\n\r\n        // var dis = origin.sub(touchPos)\r\n        // var angle = Math.atan2(dis.y, dis.x) / Math.PI * 180;\r\n        // this.arraw.node.angle = angle;\r\n    }\r\n\r\n}\r\n"]}