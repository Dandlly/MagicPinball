{"version":3,"sources":["assets\\SDK\\script\\SimpleAnalytics.ts"],"names":[],"mappings":";;;;;;AAEA,6CAAwC;AACxC,mDAA8C;AACxC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAGI,sBAAY,IAAmB;QAD/B,UAAK,GAAW,CAAC,CAAC;QAEd,IAAI,IAAI,GAAG;YACP,UAAU,EAAE,IAAI;SACnB,CAAA;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,8BAAO,GAAP;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,kBAAkB,GAAG;YACrB,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC,EAAE;gBACrB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;oBACvC,qBAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;iBACvC;qBACI;oBACD,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;wBAChB,UAAU,CAAC;4BACP,IAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,IAAI,CAAC,CAAC;qBACZ;iBACJ;aACJ;QACL,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACjD,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAClD,GAAG,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC1E,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,gCAAgC,CAAC,CAAA;QACtE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxB,qBAAW,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,eAAe,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9G,CAAC;IACL,mBAAC;AAAD,CAnCA,AAmCC,IAAA;AAmBD;IAAA;QAKI,gBAAW,GAAmB,IAAI,CAAC;QACnC,aAAQ,GAAG,CAAC,CAAC;QACb,SAAI,GAAkB,EAAE,CAAC;QACzB,eAAU,GAAG,CAAC,CAAC,CAAC;QAEhB,cAAS,GAAG,CAAC,CAAC;QACd,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,GAAG,CAAC;IAmEtB,CAAC;IAjEG,8BAAI,GAAJ,UAAK,WAA2B;QAC5B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED,gCAAM,GAAN,UAAO,EAAU;QACb,iBAAiB;QACjB,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACrB,0BAA0B;QAC1B,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,wBAAc,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACnF,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW;gBAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;SAC3E;QAED,UAAU;QACV,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,GAAG,GAAG,qBAAW,CAAC,YAAY,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC,aAAa,GAAG,GAAG,EAAE;gBACxG,cAAc;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;aACzB;SACJ;IACL,CAAC;IAEO,iCAAO,GAAf;QACI,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACnB,CAAC;IAEO,mCAAS,GAAjB,UAAkB,EAAU,EAAE,MAAU;QACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAW;YACjB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YAC5B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG;YACzB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU;YACtC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;YACrC,EAAE,EAAE,EAAE;YACN,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;YAC7B,QAAQ,EAAE,qBAAW,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE;YAC/C,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;SAChC,CAAA;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,iCAAO,GAAP,UAAQ,EAAU,EAAE,MAAU;QAC1B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;aACI;YACD,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IA7EM,wBAAQ,GAAG,0EAA0E,CAAA;IACrF,6BAAa,GAAG,CAAC,CAAC;IAClB,0BAAU,GAAG,EAAE,CAAC;IA6E3B,sBAAC;CAhFD,AAgFC,IAAA;kBAhFoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["\r\nimport * as SDK from './SimpleInterface'\r\nimport SimpleUtils from './SimpleUtils';\r\nimport SimpleSDKEvent from './SimpleSDKEvent';\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\nclass SimpleSender {\r\n    bodyJson: string;\r\n    times: number = 5;\r\n    constructor(logs: Array<LogMap>) {\r\n        let body = {\r\n            \"__logs__\": logs\r\n        }\r\n        this.bodyJson = JSON.stringify(body);\r\n        this.times = 3;\r\n    }\r\n    sendLog() {\r\n        this.times--;\r\n        let xhr = new XMLHttpRequest();\r\n        let self = this;\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status >= 200 && xhr.status < 400) {\r\n                    SimpleUtils.log(\"send log success\");\r\n                }\r\n                else {\r\n                    if (self.times > 0) {\r\n                        setTimeout(function () {\r\n                            self.sendLog();\r\n                        }, 5000);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        xhr.open(\"POST\", SimpleAnalytics.POST_URL, true);\r\n        xhr.setRequestHeader(\"x-log-apiversion\", \"0.6.0\");\r\n        xhr.setRequestHeader(\"x-log-bodyrawsize\", this.bodyJson.length.toString())\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=utf-8\")\r\n        xhr.send(this.bodyJson);\r\n        SimpleUtils.log(\"ready to send log \" + this.times + \" \" + SimpleAnalytics.POST_URL + \" \" + this.bodyJson);\r\n    }\r\n}\r\n\r\n\r\ninterface LogMap {\r\n    gameName: string\r\n    deviceId: string\r\n    package: string\r\n    platform: string\r\n    idfa: string\r\n    uid: string\r\n    idfv: string\r\n    androidId: string\r\n    sessionId: string\r\n    ev: string\r\n    logIndex: string\r\n    clientTs: string\r\n    value: string\r\n}\r\n\r\nexport default class SimpleAnalytics {\r\n    static POST_URL = \"https://bepicdata.ap-southeast-1.log.aliyuncs.com/logstores/sdklog/track\"\r\n    static SEND_INTERVAL = 5;\r\n    static BATCH_SIZE = 20;\r\n\r\n    staticsInfo: SDK.StaticInfo = null;\r\n    logIndex = 0;\r\n    logs: Array<LogMap> = [];\r\n    lastSendTs = -1;\r\n\r\n    totalTime = 0;\r\n    nextInterval = 5;\r\n    interval = 10;\r\n    maxInterval = 300;\r\n\r\n    init(staticsInfo: SDK.StaticInfo) {\r\n        this.staticsInfo = staticsInfo;\r\n    }\r\n\r\n    update(dt: number) {\r\n        //send heart beat\r\n        this.totalTime += dt;\r\n        // cc.log(this.totalTime);\r\n        if (this.totalTime > this.nextInterval) {\r\n            this.sendLog(SimpleSDKEvent.HEARTBEAT, { \"passTime\": Math.floor(this.totalTime) });\r\n            this.nextInterval += this.interval;\r\n            this.interval *= 2;\r\n            if (this.interval >= this.maxInterval) this.interval = this.maxInterval;\r\n        }\r\n\r\n        //send log\r\n        if (this.logs.length > 0) {\r\n            let now = SimpleUtils.getTimestamp();\r\n            if (this.logs.length > SimpleAnalytics.BATCH_SIZE || this.lastSendTs + SimpleAnalytics.SEND_INTERVAL < now) {\r\n                //达到上限或者达到发送时间\r\n                this.sendAll();\r\n                this.lastSendTs = now;\r\n            }\r\n        }\r\n    }\r\n\r\n    private sendAll() {\r\n        let sender = new SimpleSender(this.logs);\r\n        sender.sendLog();\r\n        this.logs = [];\r\n    }\r\n\r\n    private buildJson(ev: string, params: {}): LogMap {\r\n        let logIndex = this.logIndex;\r\n        this.logIndex++;\r\n\r\n        let logMap: LogMap = {\r\n            gameName: this.staticsInfo.gameName,\r\n            deviceId: this.staticsInfo.deviceId,\r\n            package: this.staticsInfo.pn,\r\n            platform: this.staticsInfo.platform,\r\n            idfa: this.staticsInfo.idfa,\r\n            uid: this.staticsInfo.uid,\r\n            idfv: this.staticsInfo.idfv,\r\n            androidId: this.staticsInfo.android_id,\r\n            sessionId: this.staticsInfo.sessionId,\r\n            ev: ev,\r\n            logIndex: logIndex.toString(),\r\n            clientTs: SimpleUtils.getTimestamp().toString(),\r\n            value: JSON.stringify(params)\r\n        }\r\n        return logMap;\r\n    }\r\n\r\n    sendLog(ev: string, params: {}): boolean {\r\n        if (this.staticsInfo != null) {\r\n            let logMap = this.buildJson(ev, params);\r\n            this.logs.push(logMap);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]}