{"version":3,"sources":["assets\\FSDK_ASS\\FSript\\FNetWork\\FNetWork.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { FGlobal } from \"../FModel/FGlobal\";\r\nimport { FLogic } from \"./FLogic\";\r\nimport { FSocketSend } from \"./FSocketSend\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport class FNetWork {\r\n    //定义socket\r\n    socket: WebSocket;\r\n    //设置超时时间\r\n    private HEARTBEAT_TIME_OUT = 5000;\r\n    //设置心跳间隔时间\r\n    private HEARTBEAT_TIME = 10000;\r\n    //心跳间隔定时器\r\n    private HEART_CLICK = null;\r\n    //心跳超时定时器\r\n    private HEART_TIMEOUT = null;\r\n    //回调字典\r\n    private _callbacks = {};\r\n    //回调函数\r\n    public cb = null;\r\n    public target = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public int(data, cb?: Function, target?) {\r\n        if (cb) {\r\n            this.cb = cb;\r\n            this.target = target;\r\n        }\r\n        FGlobal.NetWork.off(FEventID.EVENT_IO_ERROR);\r\n        FGlobal.NetWork.off(FEventID.EVENT_CLOSE);\r\n        if (this.socket) {\r\n            this.socket.close();\r\n            this.socket = null;\r\n        }\r\n        this.intSocket(data.host, data.port);\r\n    }\r\n\r\n    private intSocket(host, port) {\r\n        this.socket = new WebSocket(host, [], cc.url.raw(\"resources/FSDK_RES/cacert.pem\"));\r\n        this.socket.binaryType = 'arraybuffer';\r\n        this.socket.onopen = this.onConnect.bind(this);\r\n        this.socket.onclose = this.onClose.bind(this);\r\n        this.socket.onerror = this.onIOError.bind(this);\r\n        this.socket.onmessage = this.onMessage.bind(this);\r\n    }\r\n\r\n    //连接成功\r\n    private onConnect() {\r\n        FLog.normal(\"socket 连接成功\")\r\n        if (this.cb) {\r\n            this.cb.call(this.target);\r\n            this.cb = null;\r\n        }\r\n        this.openHeart();\r\n    }\r\n\r\n    //socket断开\r\n    private onClose(e: CloseEvent) {\r\n        this.clearAllTime();\r\n        this.emit(FEventID.EVENT_CLOSE, e);\r\n        FLog.normal(\"socket 连接断开\")\r\n    }\r\n\r\n    public openHeart() {\r\n        FSocketSend.C2S_heartbeat();\r\n    }\r\n\r\n    //连接错误\r\n    private onIOError(e: Event) {\r\n        this.clearAllTime();\r\n        this.emit(FEventID.EVENT_IO_ERROR, e);\r\n        FLog.normal(\"socket 连接错误\")\r\n    }\r\n\r\n    //退出登录了\r\n    out() {\r\n        this.clearAllTime();\r\n        FGlobal.NetWork.off(FEventID.EVENT_IO_ERROR);\r\n        FGlobal.NetWork.off(FEventID.EVENT_CLOSE);\r\n        if (this.socket) {\r\n            this.socket.close();\r\n            this.socket = null;\r\n        }\r\n        FLogic.getInstance().removeCommonListenser();\r\n        FGlobal.NetWork = null;\r\n    }\r\n\r\n    //心跳包\r\n    public heartbeat() {\r\n        //进来就证明没有超时\r\n        if (this.HEART_TIMEOUT) {\r\n            clearTimeout(this.HEART_TIMEOUT);\r\n        }\r\n        this.HEART_CLICK = setTimeout(function () {\r\n            FSocketSend.C2S_heartbeat();\r\n            this.HEART_TIMEOUT = setTimeout(function () {\r\n                this.heartbeatOut();\r\n            }.bind(this), this.HEARTBEAT_TIME_OUT);\r\n        }.bind(this), this.HEARTBEAT_TIME);\r\n    }\r\n\r\n    //心跳超时啦\r\n    public heartbeatOut() {\r\n        FLog.normal(\"心跳超时间\")\r\n        this._disconnect();\r\n    }\r\n\r\n    //重连\r\n    private _disconnect(): void {\r\n        FLog.normal(\"重连\")\r\n        if (this.socket && this.socket.readyState == 1) {\r\n            this.socket.close();\r\n            this.socket = null;\r\n            this.clearAllTime();\r\n        }\r\n    }\r\n\r\n    //清除计时器\r\n    clearAllTime() {\r\n        if (this.HEART_CLICK) {\r\n            clearTimeout(this.HEART_CLICK);\r\n        }\r\n        if (this.HEART_TIMEOUT) {\r\n            clearTimeout(this.HEART_TIMEOUT);\r\n        }\r\n    }\r\n\r\n\r\n    /**添加消息事件及其监听 */\r\n    public on(event, fn) {\r\n        (this._callbacks[event] = this._callbacks[event] || []).push(fn);\r\n    }\r\n\r\n    /**移除对消息的事件监听 */\r\n    public off(event?, fn?) {\r\n        this.removeAllListeners(event, fn);\r\n    }\r\n\r\n    public removeAllListeners(event?, fn?) {\r\n        if (0 == arguments.length) {\r\n            this._callbacks = {};\r\n            return;\r\n        }\r\n\r\n        var callbacks = this._callbacks[event];\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n\r\n        if (event && !fn) {\r\n            delete this._callbacks[event];\r\n            return;\r\n        }\r\n\r\n        var i = this.index(callbacks, fn._off || fn);\r\n        if (~i) {\r\n            callbacks.splice(i, 1);\r\n        }\r\n        return;\r\n    }\r\n\r\n    private index(arr, obj) {\r\n        if ([].indexOf) {\r\n            return arr.indexOf(obj);\r\n        }\r\n\r\n        for (var i = 0; i < arr.length; ++i) {\r\n            if (arr[i] === obj)\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**向服务器请求\r\n     * 1.msg_code:对应消息码\r\n     * 2.msg:需要发送的数据\r\n     * 3.cb 请求返回之后的回调\r\n      */\r\n    public request(msg) {\r\n        this.sendMessage(msg);\r\n    }\r\n\r\n    /**发送消息 */\r\n    private sendMessage(data) {\r\n        if (!cc.sys.isNative) {\r\n            FLog.normal(\"这个是客户端的上报   \", data);\r\n        }\r\n        else {\r\n            FLog.normal(\"这个是客户端的上报   \", JSON.stringify(data));\r\n        }\r\n        let msgStr: string = JSON.stringify(data);\r\n        this.send(msgStr);\r\n        return true;\r\n\r\n    }\r\n\r\n    private send(byte): void {\r\n        if (this.socket && this.socket.readyState == 1) {\r\n            this.socket.send(byte);\r\n        }\r\n    }\r\n\r\n    //消息接收\r\n    private onMessage(event: MessageEvent): void {\r\n        let msgObject = JSON.parse(event.data);\r\n        if (!cc.sys.isNative) {\r\n            FLog.normal(\"服务器返回\", msgObject);\r\n        }\r\n        else {\r\n            FLog.normal(\"服务器返回\", JSON.stringify(msgObject));\r\n        }\r\n        cc.director.emit(msgObject.type, msgObject);\r\n    }\r\n\r\n    private tru = 0;\r\n\r\n    private emit(event, ...args: any[]) {\r\n        var params = [].slice.call(arguments, 1);\r\n        var callbacks = this._callbacks[event];\r\n        if (callbacks) {\r\n            callbacks = callbacks.slice(0);\r\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n                callbacks[i].call(this, params, event);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n}"]}